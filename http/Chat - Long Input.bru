meta {
  name: Chat - Long Input
  type: http
  seq: 12
}

post {
  url: {{host}}/chat
  body: json
  auth: inherit
}

body:json {
  {
    "input": "This is a very long input message that tests how the API handles longer text inputs. It should still process correctly and return a valid response. The purpose is to ensure that the API can handle various input lengths without issues. This message continues for a while to simulate a real-world scenario where users might send longer messages or detailed questions that require comprehensive responses from the AI assistant.",
    "prompt": "You are a helpful assistant. Please provide a concise response."
  }
}

tests {
  test("should return 200 status", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should return chat response", function() {
    expect(res.getBody()).to.have.property('message');
    expect(res.getBody()).to.have.property('chatId');
  });
  
  test("should return non-empty message", function() {
    expect(res.getBody().message).to.be.a('string');
    expect(res.getBody().message.length).to.be.greaterThan(0);
  });
}